import{_ as s,o as a,c as e,S as n}from"./chunks/framework.662a2917.js";const A=JSON.parse('{"title":"scope","description":"","frontmatter":{},"headers":[],"relativePath":"reference/server/middlewares/scope.md","filePath":"reference/server/middlewares/scope.md"}'),p={name:"reference/server/middlewares/scope.md"},l=n(`<h1 id="scope" tabindex="-1">scope <a class="header-anchor" href="#scope" aria-label="Permalink to &quot;scope&quot;">â€‹</a></h1><p>Check the scopes of the token with specific http methods.</p><p>This usable after the <code>auth</code> middleware.</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">middlewares</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">test</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">methods</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># default is empty checking all, []string</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">GET</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">POST</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">scopes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># default is empty, []string</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">scope1</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">scope2</span></span></code></pre></div>`,4),o=[l];function t(c,r,i,y,D,d){return a(),e("div",null,o)}const _=s(p,[["render",t]]);export{A as __pageData,_ as default};
