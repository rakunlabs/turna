import{_ as s,o as n,c as a,S as e}from"./chunks/framework.662a2917.js";const F=JSON.parse('{"title":"Session Info","description":"","frontmatter":{},"headers":[],"relativePath":"reference/server/middlewares/session_info.md","filePath":"reference/server/middlewares/session_info.md"}'),o={name:"reference/server/middlewares/session_info.md"},l=e(`<h1 id="session-info" tabindex="-1">Session Info <a class="header-anchor" href="#session-info" aria-label="Permalink to &quot;Session Info&quot;">â€‹</a></h1><p>Return the data inside of the token.</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">middlewares</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">session_info</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">session_info</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">information</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">values</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Values list to store in the cookie like &quot;preferred_username&quot;, &quot;given_name&quot;...</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">custom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># Custom values to append</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">roles</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># If true, it will return roles as []string</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">scopes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># If true, it will return scopes as []string</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">session_middleware</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">session</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># session middleware name to to parse token</span></span></code></pre></div>`,3),p=[l];function t(r,c,i,y,D,C){return n(),a("div",null,p)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};
