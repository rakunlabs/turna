{
  "swagger": "2.0",
  "info": {
    "title": "OpenFGA Integration",
    "description": "User extension for OpenFGA.",
    "version": "0.1"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "Get all users",
        "operationId": "GetUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGetResponse"
              }
            }
          },
          "204": {
            "description": "No users found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by alias or ID",
        "description": "Get user by alias or ID",
        "operationId": "GetUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "query",
            "description": "Alias of user to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID of user to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserGetResponse"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user by ID",
        "description": "Delete user by ID",
        "operationId": "DeleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of user to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user by ID",
        "description": "Update user by ID",
        "operationId": "UpdateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPatchRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Replace user by ID",
        "description": "Replace user by ID",
        "operationId": "ReplaceUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be replaced",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPatchRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "description": "Create a new user",
        "operationId": "CreateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserCreateResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/convert/dsl2json": {
      "post": {
        "tags": [
          "convert"
        ],
        "summary": "Convert DSL to JSON",
        "description": "Convert DSL to JSON",
        "operationId": "Dsl2Json",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "DSL to convert",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/convert/json2dsl": {
      "post": {
        "tags": [
          "convert"
        ],
        "summary": "Convert JSON to DSL",
        "description": "Convert JSON to DSL",
        "operationId": "Json2Dsl",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "JSON to convert",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "eates"
          }
        }
      }
    },
    "UserCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "01G65Z755AFWAKHE12NY0CQ9FH"
        }
      }
    },
    "UserPatchRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "01G65Z755AFWAKHE12NY0CQ9FH"
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "eates"
          }
        }
      }
    },
    "UserGetResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "01G65Z755AFWAKHE12NY0CQ9FH"
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "eates"
          }
        }
      }
    }
  }
}
