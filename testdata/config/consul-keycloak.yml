server:
  entrypoints:
    web:
      address: ":8000"
  http:
    middlewares:
      refresh:
        inject:
          content_map:
            "text/html":
              - old: "</head>"
                new: |
                  <script defer>
                    // Override the fetch function
                    window.fetch = async function(...args) {
                      try {
                        // Use the original fetch function and get the response
                        const response = await originalFetch(...args);

                        // Check for the 407 status code
                        if (response.status === 407) {
                          location.reload();  // Refresh the page
                          return;  // Optionally, you can throw an error or return a custom response here
                        }

                        // Return the original response for other cases
                        return response;
                      } catch (error) {
                        throw error;  // Rethrow any errors that occurred during the fetch
                      }
                    }
                  </script>
                  </head>
      keycloak:
        auth:
          provider:
            keycloak:
              base_url: "http://localhost:8080"
              realm: "master"
              client_id: "ui"
              scopes:
                - openid
          redirect:
            logout:
              url: "/logout"
              redirect: "http://localhost:8000"
            callback: "/ui/"
            callback_set: true
            callback_modify:
              - regex: "(^/$)"
                replacement: "/ui/"
            schema: "http"
            session_key: "1234"
            use_session: true
            # secure: true
            check_agent: true
            refresh_token: true
            redirect_match:
              enabled: true
            information:
              cookie:
                name: "auth_info"
                roles: true
                scopes: true
      consul:
        service:
          loadbalancer:
            servers:
              - url: "http://localhost:8500"
    routers:
      consul:
        path: /*
        middlewares:
          - keycloak
          - refresh
          - consul
